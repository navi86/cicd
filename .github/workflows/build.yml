name: Build and Test workflow for Spring Boot microservices

on:
  workflow_call:

jobs:
  CI:
    runs-on: ubuntu-latest
    # services:
    #   postgres:
    #     # Docker Hub PostgreSQL image
    #     image: postgres:9.6.5-alpine
    #     # Provide the password for postgres
    #     env:
    #       POSTGRES_DB: test
    #       POSTGRES_USER: postgres
    #       POSTGRES_PASSWORD: postgres
    #     options: >-
    #       --health-cmd pg_isready
    #       --health-interval 10s
    #       --health-timeout 5s
    #       --health-retries 5
    #     ports:
    #       # Maps tcp port 5432 on service container to the host
    #       - 5432:5432

    steps:
    - uses: actions/checkout@v3

    # Extract custom variable to use outside of runner
    # https://github.com/github/feedback/discussions/10553 when it will be added then we can simply do
    - name: Variables
      id: vars
      env: 
        GITHUB_REPOSITORY: ${{ github.repository }}
      run: |
        echo "short_sha=$(echo ${GITHUB_SHA} | cut -c1-7)" >> $GITHUB_OUTPUT
        echo "github_repository=$(echo ${GITHUB_REPOSITORY,,} )" >> $GITHUB_OUTPUT
        echo "branch_name=$(echo ${GITHUB_REF##*/} )" >> $GITHUB_OUTPUT
        echo "github_repository_name=$(echo ${GITHUB_REPOSITORY,,} | awk -F / '{print $2}' )" >> $GITHUB_OUTPUT
        echo "docker_hub=navi86" >> $GITHUB_OUTPUT

    - name: Configure Agent
      env:
        KUBE_VERSION: v1.20.1
      run: |
        sudo apt update
        sudo apt-get install libpq-dev imagemagick -y
        echo "install kubectl"
        curl -L https://storage.googleapis.com/kubernetes-release/release/$KUBE_VERSION/bin/linux/amd64/kubectl -o /tmp/kubectl && sudo mv /tmp/kubectl /usr/local/bin/kubectl
        sudo chmod +x /usr/local/bin/kubectl
        echo "install helm"
        curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
        chmod 700 get_helm.sh && ./get_helm.sh
    
    # - name: Login to Quay.io docker registry
    #   uses: docker/login-action@v2
    #   with:
    #     registry: quay.io
    #     username: "${{ steps.secrets.outputs.docker_username }}"
    #     password: "${{ steps.secrets.outputs.docker_password }}"

    - name: docker build
      run: |
        docker pull ${{ steps.vars.outputs.docker_hub }}/${{ steps.vars.outputs.github_repository_name }}:${{ steps.vars.outputs.branch_name }} || docker pull ${{ steps.vars.outputs.docker_hub }}/${{ steps.vars.outputs.github_repository_name }}:master || true
        docker build -t ${{ steps.vars.outputs.docker_hub }}/${{ steps.vars.outputs.github_repository_name }}:${{ steps.vars.outputs.branch_name }} ./ \
          --cache-from ${{ steps.vars.outputs.docker_hub }}/${{ steps.vars.outputs.github_repository_name }}:${{ steps.vars.outputs.branch_name }} \
          --cache-from ${{ steps.vars.outputs.docker_hub }}/${{ steps.vars.outputs.github_repository_name }}:master
        docker tag ${{ steps.vars.outputs.docker_hub }}/${{ steps.vars.outputs.github_repository_name }}:${{ steps.vars.outputs.branch_name }} ${{ steps.vars.outputs.docker_hub }}/${{ steps.vars.outputs.github_repository_name }}:${{ steps.vars.outputs.branch_name }}-${{ steps.vars.outputs.short_sha }}
        docker images

    # https://github.com/aquasecurity/trivy-action
    # https://github.com/actions/toolkit/issues/399
    - name: scan_docker_image_aquasec
      uses: aquasecurity/trivy-action@master
      continue-on-error: false
      with:
        image-ref: ${{ steps.vars.outputs.docker_hub }}/${{ steps.vars.outputs.github_repository_name }}:${{ steps.vars.outputs.branch_name }}
        severity: "CRITICAL,HIGH"
        skip-dirs: /usr/local/bundle/cache
        security-checks: vuln
        ignore-unfixed: true
        exit-code: "1"

    # - name: push_docker_image
    #   run: |
    #     docker push quay.io/${{ steps.vars.outputs.github_repository }}:${{ steps.vars.outputs.branch_name }}
    #     docker push quay.io/${{ steps.vars.outputs.github_repository }}:${{ steps.vars.outputs.branch_name }}-${{ steps.vars.outputs.short_sha }}


